- name: build hosts file
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_eth0.ipv4.address }} {{item}}" state=present
  when: hostvars[item].ansible_eth0.ipv4.address is defined
  with_items: "{{ groups['all'] }}"

- name: disable selinux
  selinux: state=disabled

- name: disable of selinux - now
  command: setenforce 0

- name: Ensure net.bridge.bridge-nf-call-iptables is set. See kubeadm
  copy: src=k8s.conf owner=root group=root dest=/etc/sysctl.d/k8s.conf

- name: modprobe drivers
  command: modprobe {{ item }}
  with_items:
    - overlay
    - br_netfilter
    - tun

- name: add to /etc/modprobe.d
  shell: echo "{{ item }}" >> /etc/modules-load.d/{{ item }}.conf
  with_items:
    - overlay
    - br_netfilter
    - tun

- name: Run sysctl
  command: sysctl --system

# This is deprecated and will have to change. See:
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#rpm-google-package-repo
- name: Add Kubernetes yum repo
  yum_repository:
    name: kubernetes
    description: Kubernetes kubeadm
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg
    gpgcheck: yes

# Kubernetes doesn't seem to support nftables yet:
# https://stackoverflow.com/questions/65139565/internet-connectivity-inside-the-pod-of-kubernetes-is-not-working
- name: remove nftables
  dnf: name=nftables state=absent

- name: install utility programs
  dnf: name={{ packages }} state=present disable_gpg_check=yes
  vars:
    packages:
      - wget
      - screen
      - vim
      - iptables
      - iptables-utils
      - iptables-services
      - ncurses-term
      - kernel-devel
      - kernel-headers
      - containernetworking-plugins
      - dnf-plugins-core
      - jq
      - lvm2
      - device-mapper-persistent-data
      - dnf-plugins-core
      - epel-release
      - dnf-utils

- name: enable iptables
  service: name=iptables state=started enabled=yes

- name: allow everything
  command: iptables -F

- name: install containerd repo from Docker
  command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name: install containerd
  dnf: name={{ packages }} state=present disable_gpg_check=yes
  vars:
    packages:
      - containerd.io
      - docker-ce
      - docker-ce-cli
      - https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.4/cri-dockerd-0.3.4-3.el8.x86_64.rpm

#- name: create containerd config
#  shell: containerd config default > /etc/containerd/config.toml

#- name: enable SystemdCgroup
#  lineinfile: dest=/etc/containerd/config.toml regexp="SystemdCgroup" line="SystemdCgroup = true" state=present

- name: install kubernetes
  dnf: name={{ packages }} state=present disable_gpg_check=yes
  vars:
    packages:
      - kubelet-{{ kubever }}-0
      - kubeadm-{{ kubever }}-0
      - kubectl-{{ kubever }}-0
  when: kubever is defined

- name: install latest kubernetes
  dnf: name={{ packages }} state=present disable_gpg_check=yes
  vars:
    packages:
      - kubelet
      - kubeadm
      - kubectl
  when: kubever is not defined

- name: make dir /opt/cni
  ansible.builtin.file:
    path: /opt/cni
    state: directory

- name: enable kube services
  service: name={{ item }} state=started enabled=yes
  with_items:
    - kubelet
    - docker

- name: enable cri-docker
  service: name=cri-docker state=started enabled=yes

- name: turn off swap
  command: swapoff -a

- name: remove swap from /etc/fstab
  lineinfile:
    path: /etc/fstab
    state: absent
    regexp: "swap"

# https://www.suse.com/support/kb/doc/?id=000020017
- name: prevent NetworkManager from interfering with flannel networks
  copy: src=nm-flannel.conf owner=root group=root dest=/etc/NetworkManager/conf.d/cni.conf

- name: restart NetworkManager
  service: name=NetworkManager state=restarted
